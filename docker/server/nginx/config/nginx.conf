user www-data;
worker_processes auto;
pid /run/nginx.pid;
#include /etc/nginx/modules-enabled/*.conf;
daemon off;

events {
    worker_connections 768;
    # multi_accept on;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10m;  

    include /var/www/docker/server/nginx/config/mime.types;
    default_type application/octet-stream;

    access_log /dev/stdout;
    error_log /dev/stderr;

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    #Set what content types may be gzipped.
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/javascript text/xml application/xml application/rss+xml application/atom+xml application/rdf+xml;


    server {
        listen 80 default_server;
        listen 8000 default_server;
        location / {
            return 404;
        }
    }

    # the normal block APP
    server {
        server_name {HOST_DOMAIN};
        listen 80;
        listen 8000;
        root /var/www/public;

        location ~* ^(.+).(bmp|bz2|css|gif|doc|gz|html|ico|jpg|jpeg|js|mid|midi|png|rtf|rar|pdf|ppt|tar|tgz|txt|wav|xls|zip)$ {
            #access_log off;
            try_files $uri /index.php?file=$1.$2&q=$uri&$args;
            expires 20m;
            add_header Pragma public;
            add_header Cache-Control "public, no-transform, max-age=1200, s-maxage=300";
        }

        # location / {
        #     try_files $uri /index.php?q=$uri&$args;
        # }


        # location /index.php {
        location / {
            try_files $uri @rewriteapp;
        }

        location @rewriteapp {
            rewrite ^(.*)$ /index.php/$1 last;
        }

        location ~ ^/index\.php(/|$) {
            # Mitigate https://httpoxy.org/ vulnerabilities
            fastcgi_param HTTP_PROXY "";
            # fastcgi_index index.php;
            include /var/www/docker/server/nginx/config/fastcgi.conf;
            fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
            fastcgi_read_timeout 300;
            fastcgi_pass server_php_fpm_prod:9000;
        }

        error_log /var/log/nginx/app_error.log;
        access_log /var/log/nginx/app_access.log;
    }

    # the xdebug block APP
    server {
        server_name {HOST_DOMAIN};
        listen 8001;
        root /var/www/public;

        location ~* ^(.+).(bmp|bz2|css|gif|doc|gz|html|ico|jpg|jpeg|js|mid|midi|png|rtf|rar|pdf|ppt|tar|tgz|txt|wav|xls|zip)$ {
            #access_log off;
            try_files $uri /index.php?file=$1.$2&q=$uri&$args;
            expires 20m;
            add_header Pragma public;
            add_header Cache-Control "public, no-transform, max-age=1200, s-maxage=300";
        }

        # location / {
        #     try_files $uri /index.php?q=$uri&$args;
        # }


        # location /index.php {
        location / {
            try_files $uri @rewriteapp;
        }

        location @rewriteapp {
            rewrite ^(.*)$ /index.php/$1 last;
        }

        location ~ ^/index\.php(/|$) {
            # Mitigate https://httpoxy.org/ vulnerabilities
            fastcgi_param HTTP_PROXY "";
            fastcgi_index index.php;
            include /var/www/docker/server/nginx/config/fastcgi.conf;
            # fastcgi_param SCRIPT_FILENAME $document_root/$fastcgi_script_name;
            fastcgi_read_timeout 300;
            fastcgi_pass server_php_fpm_dev:9000;
        }

        error_log /var/log/nginx/app_error.log;
        access_log /var/log/nginx/app_access.log;
    }

    # Node server block
    upstream node {
        server server_node:3000;
    }
    server {
        server_name {HOST_DOMAIN};
        listen 5000;

        location / {
            proxy_pass http://node;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        error_log /var/log/nginx/node_error.log;
        access_log /var/log/nginx/node_access.log;
    }

    include /var/www/docker/server/nginx/config/nginx_extra_hosts.conf;
}
